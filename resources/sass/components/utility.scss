// Name:            Utility
// Description:     Utilities collection
//
// Component:       `id-panel-*`
//                  `id-clearfix`
//                  `id-float-*`
//                  `id-overflow-*`
//                  `id-resize-*`
//                  `id-display-*`
//                  `id-inline-*`
//                  `id-responsive-*`
//                  `id-preserve-width`
//                  `id-border-*`
//                  `id-box-shadow-*`
//                  `id-box-shadow-bottom`
//                  `id-dropcap`
//                  `id-logo`
//                  `id-blend-*`
//                  `id-transform-*`
//                  `id-transform-origin-*`
//
// States:          `id-disabled`
//                  `id-drag`
//                  `id-dragover`
//                  `id-preserve`
//
// ========================================================================


// Variables
// ========================================================================

$panel-scrollable-height:                        170px !default;
$panel-scrollable-padding:                       10px !default;
$panel-scrollable-border-width:                  $global-border-width !default;
$panel-scrollable-border:                        $global-border !default;

$border-rounded-border-radius:                   5px !default;

$box-shadow-duration:                            0.1s !default;

$box-shadow-bottom-height:                       30px !default;
$box-shadow-bottom-border-radius:                100% !default;
$box-shadow-bottom-background:                   #444 !default;
$box-shadow-bottom-blur:                         20px !default;

$dropcap-margin-right:                           10px !default;
$dropcap-font-size:                              (($global-line-height * 3) * 1em) !default;

$logo-font-size:                                 $global-large-font-size !default;
$logo-font-family:                               $global-font-family !default;
$logo-color:                                     $global-color !default;
$logo-hover-color:                               $global-color !default;

$dragover-box-shadow:                            0 0 20px rgba(100,100,100,0.3) !default;


/* ========================================================================
   Component: Utility
 ========================================================================== */


/* Panel
 ========================================================================== */

.id-panel {
    position: relative;
    box-sizing: border-box;
}

/*
 * Micro clearfix
 */

.id-panel::before,
.id-panel::after {
    content: "";
    display: table;
}

.id-panel::after { clear: both; }

/*
 * Remove margin from the last-child
 */

.id-panel > :last-child { margin-bottom: 0; }


/*
 * Scrollable
 */

.id-panel-scrollable {
    height: $panel-scrollable-height;
    padding: $panel-scrollable-padding;
    border: $panel-scrollable-border-width solid $panel-scrollable-border;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    resize: both;
}


/* Clearfix
 ========================================================================== */

/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * 2. `table` is used again with `::after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */

/* 1 */
.id-clearfix::before {
    content: "";
    display: table-cell;
}

/* 2 */
.id-clearfix::after {
    content: "";
    display: table;
    clear: both;
}


/* Float
 ========================================================================== */

/*
 * 1. Prevent content overflow
 */

.id-float-left { float: left; }
.id-float-right { float: right; }

/* 1 */
[class*='id-float-'] { max-width: 100%; }


/* Overfow
 ========================================================================== */

.id-overflow-hidden { overflow: hidden; }

/*
 * Enable scrollbars if content is clipped
 * Note: Firefox ignores `padding-bottom` for the scrollable overflow https://bugzilla.mozilla.org/show_bug.cgi?id=748518
 */

.id-overflow-auto {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

.id-overflow-auto > :last-child { margin-bottom: 0; }


/* Resize
 ========================================================================== */

.id-resize { resize: both; }
.id-resize-vertical { resize: vertical; }


/* Display
 ========================================================================== */

.id-display-block { display: block !important; }
.id-display-inline { display: inline !important; }
.id-display-inline-block { display: inline-block !important; }


/* Inline
 ========================================================================== */

/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force hardware acceleration without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */

[class*='id-inline'] {
    /* 1 */
    display: inline-block;
    /* 2 */
    position: relative;
    /* 3 */
    max-width: 100%;
    /* 4 */
    vertical-align: middle;
    /* 5 */
    -webkit-backface-visibility: hidden;
}

.id-inline-clip {
    /* 6 */
    overflow: hidden;
}


/* Responsive objects
 ========================================================================== */

/*
 * Preserve original dimensions
 * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
 */

.id-preserve-width,
.id-preserve-width canvas,
.id-preserve-width img,
.id-preserve-width svg,
.id-preserve-width video { max-width: none; }

/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */

.id-responsive-width,
.id-responsive-height { box-sizing: border-box; }

/*
 * 1. Set a maximum width. `important` needed to override `id-preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */

.id-responsive-width {
    /* 1 */
    max-width: 100% !important;
    /* 2 */
    height: auto;
}

/*
 * 1. Set a maximum height. Only works if the parent element has a fixed height
 * 2. Auto scale the width. Only needed if `width` attribute is present
 * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
 */

.id-responsive-height {
    /* 1 */
    max-height: 100%;
    /* 2 */
    width: auto;
    /* 3 */
    max-width: none;
}


/* Border
 ========================================================================== */

.id-border-circle { border-radius: 50%; }
.id-border-pill { border-radius: 500px; }
.id-border-rounded { border-radius: $border-rounded-border-radius; }

/*
 * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 */

.id-inline-clip[class*='id-border-'] { -webkit-transform: translateZ(0); }


/* Box-shadow
 ========================================================================== */

.id-box-shadow-small { box-shadow: $global-small-box-shadow; }
.id-box-shadow-medium { box-shadow: $global-medium-box-shadow; }
.id-box-shadow-large { box-shadow: $global-large-box-shadow; }
.id-box-shadow-xlarge { box-shadow: $global-xlarge-box-shadow; }

/*
 * Hover
 */

[class*='id-box-shadow-hover'] { transition: box-shadow $box-shadow-duration ease-in-out; }

.id-box-shadow-hover-small:hover { box-shadow: $global-small-box-shadow; }
.id-box-shadow-hover-medium:hover { box-shadow: $global-medium-box-shadow; }
.id-box-shadow-hover-large:hover { box-shadow: $global-large-box-shadow; }
.id-box-shadow-hover-xlarge:hover { box-shadow: $global-xlarge-box-shadow; }


/* Box-shadow bottom
 ========================================================================== */

/*
 * 1. Set position.
 * 2. Set style
 * 3. Blur doesn't work on pseudo elements with negative `z-index` in Edge.
 *    Solved by using `before` and add position context to child elements.
 */

@supports (filter: blur(0)) {

    .id-box-shadow-bottom {
        display: inline-block;
        position: relative;
        max-width: 100%;
        vertical-align: middle;
    }

    .id-box-shadow-bottom::before {
        content: '';
        /* 1 */
        position: absolute;
        bottom: (-$box-shadow-bottom-height);
        left: 0;
        right: 0;
        /* 2 */
        height: $box-shadow-bottom-height;
        border-radius: $box-shadow-bottom-border-radius;
        background: $box-shadow-bottom-background;
        filter: blur($box-shadow-bottom-blur);
    }

    /* 3 */
    .id-box-shadow-bottom > * { position: relative; }

}


/* Drop cap
 ========================================================================== */

/*
 * 1. Firefox doesn't apply `::first-letter` if the first letter is inside child elements
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=214004
 * 2. In Firefox, a floating `::first-letter` doesn't have a line box and there for no `line-height`
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=317933
 * 3. Caused by 1.: Edge creates two nested `::first-letter` containers, one for each selector
 *    This doubles the `font-size` exponential when using the `em` unit.
 */

.id-dropcap::first-letter,
    /* 1 */
.id-dropcap > p:first-of-type::first-letter {
    display: block;
    margin-right: $dropcap-margin-right;
    float: left;
    font-size: $dropcap-font-size;
    line-height: 1;
}

/* 2 */
@-moz-document url-prefix() {

    .id-dropcap::first-letter,
    .id-dropcap > p:first-of-type::first-letter { margin-top: 1.1%; }

}

/* 3 */
@supports (-ms-ime-align: auto) {

    .id-dropcap > p:first-of-type::first-letter { font-size: 1em; }

}



/* Disabled State
 ========================================================================== */

.id-disabled { pointer-events: none; }


/* Drag State
 ========================================================================== */

/*
 * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
 * 2. Fix dragging over iframes
 */

.id-drag,
    /* 1 */
.id-drag * { cursor: move; }

/* 2 */
.id-drag iframe { pointer-events: none; }


/* Dragover State
 ========================================================================== */

/*
 * Create a box-shadow when dragging a file over the upload area
 */

.id-dragover { box-shadow: $dragover-box-shadow; }


/* Blend modes
 ========================================================================== */

.id-blend-multiply { mix-blend-mode: multiply; }
.id-blend-screen { mix-blend-mode: screen; }
.id-blend-overlay { mix-blend-mode: overlay; }
.id-blend-darken { mix-blend-mode: darken; }
.id-blend-lighten { mix-blend-mode: lighten; }
.id-blend-color-dodge { mix-blend-mode: color-dodge; }
.id-blend-color-burn { mix-blend-mode: color-burn; }
.id-blend-hard-light { mix-blend-mode: hard-light; }
.id-blend-soft-light { mix-blend-mode: soft-light; }
.id-blend-difference { mix-blend-mode: difference; }
.id-blend-exclusion { mix-blend-mode: exclusion; }
.id-blend-hue { mix-blend-mode: hue; }
.id-blend-saturation { mix-blend-mode: saturation; }
.id-blend-color { mix-blend-mode: color; }
.id-blend-luminosity { mix-blend-mode: luminosity; }


/* Transform
========================================================================== */

.id-transform-center { transform: translate(-50%, -50%); }


/* Transform Origin
========================================================================== */

.id-transform-origin-top-left { transform-origin: 0 0; }
.id-transform-origin-top-center { transform-origin: 50% 0; }
.id-transform-origin-top-right { transform-origin: 100% 0; }
.id-transform-origin-center-left { transform-origin: 0 50%; }
.id-transform-origin-center-right { transform-origin: 100% 50%; }
.id-transform-origin-bottom-left { transform-origin: 0 100%; }
.id-transform-origin-bottom-center { transform-origin: 50% 100%; }
.id-transform-origin-bottom-right { transform-origin: 100% 100%; }
